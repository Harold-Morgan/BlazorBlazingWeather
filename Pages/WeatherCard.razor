@page "/weathercard"
@using BlazorBlazingWeather.Data
@using OpenWeatherMap.Standard
@using System.Threading
@inject WeatherForecastService ForecastService

<div class="container">
    <div class="row">
        <div class="col">
            <div class="weather-card one">
                <div class="top">
                    <div class="wrapper">
                        <div class="mynav">
                            <a href="javascript:;"><span class="lnr lnr-chevron-left"></span></a>
                            <a href="javascript:;"><span class="lnr lnr-cog"></span></a>
                        </div>
                        <h1 class="heading">@DateTime.Now</h1>
                        <h3 class="location">@WeatherData.Name</h3>
                        <p class="temp">
                            <span class="temp-value">@Math.Floor(WeatherData.WeatherDayInfo.Temperature)</span>
                            <span class="deg">@(Convert.ToInt32((Math.Ceiling(WeatherData.WeatherDayInfo.Temperature) - WeatherData.WeatherDayInfo.Temperature) * 100))</span>
                            <a href="javascript:;"><span class="temp-type">C</span></a>
                        </p>
                    </div>
                </div>
                <div class="bottom">
                    <div class="wrapper">
                        <ul class="forecast">
                            <a href="javascript:;"><span class="lnr lnr-chevron-up go-up"></span></a>
                            <li class="active">
                                <span class="date">Yesterday</span>
                                <span class="lnr lnr-sun condition">
                                    <span class="temp">23<span class="deg">0</span><span class="temp-type">C</span></span>
                                </span>
                            </li>
                            <li>
                                <span class="date">Tomorrow</span>
                                <span class="lnr lnr-cloud condition">
                                    <span class="temp">21<span class="deg">0</span><span class="temp-type">C</span></span>
                                </span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    WeatherData WeatherData;
//    private static System.Timers.Timer aTimer = new System.Timers.Timer(1000);

//    private static void OnTimedEvent(Object source, ElapsedEventArgs e)
//    {
//        source.StateHasChanged()
//    }

    protected override async Task OnInitAsync()
    {
        WeatherData = await ForecastService.GetWeatherData();
        Task.WaitAll();
        var timer = new Timer(new TimerCallback(_ =>
        {
            base.Invoke(StateHasChanged);
        }), null, 1000, 1000);
    }
}
